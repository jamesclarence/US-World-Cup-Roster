for(i in 1:nc) {# integer vector, starts at 1 through number of columns
means[i] <- mean(y[ , ])
}
means
}
columnmean(airquality)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc) # empty vector
for(i in 1:nc) {# integer vector, starts at 1 through number of columns
means[i] <- mean(y[ , i])
}
means
}
columnmean(airquality)
d = 3L
d
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
x <- tapply(mtcars$mpg, mtcars$cyl, mean)
x$8-x$4
x
x[,3]
dim(x)
x[3]
x[3] - x[1]
y <- x[3] - x[1]
abs(y)
ls
rm(x)
mean(x)
traceback()
lm(y~x)
traceback()
debug(lm)
lm(y~x)
x <- tapply(mtcars$mpg, mtcars$cyl, mean)
lapply(x,abs)
y2 <- x[1] - x[3]
y2
head(mtcars)
x <- tapply(mtcars$hp, mtcars$cyl, mean)
x
y <- x[3] - x[1]
y
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
b <- matrix(c(2,4,3,1,5,7), nrow=3,ncol=2)
b
solve(b)
b <- matrix(c(2,4,3,1), nrow=2,ncol=2)
solve(b)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector
cachemean
makeVector(c(1,2,3,4))
get
vec <- c(1,2,3,4)
makeVector(vec)
makeVector$get(vec)
makeVector$get
function(vec)
)
vec$get(vec)
vec$get
makeVector
aNewContext <- function() {
+   # Let's create a variable called myMessage
+   myMessage <- "Hello, world!"
+   myMessage
+ }
aNewContext <- function() {
# Let's create a variable called myMessage
myMessage <- "Hello, world!"
myMessage
}
aNewContext
aNewContext()
myMessage
things <- 999
sing <- function(sing) sprintf("%d bottles of beer on the %s!", thing thing)
sing("wall")
sing <- function(sing) {
sprintf("%d bottles of beer on the %s!", thing thing)
}
sing <- function(thing) {
sprintf("%d bottles of beer on the %s!", thing thing)
}
sing <- function(thing) {
sprintf("%d bottles of beer on the %s!", things, thing)
}
s
sing
sing("wall")
decreaseThings <- function() things <- things - 1
decreaseThings()
sing("wall")
decreaseThings()
sing("wall")
things
decreaseThingsProperly <- function() things <<- things -1
decreaseThingsProperly()
sing("wall")
sing("wall")
things
decreaseThingsProperly()
sing("wall")
x <-5
changeX <-function(newXValue) x <- newXValue
changeX(100)
x
reallyChangeX <- function(newXValue) x <<- newXValue
reallyChangeX(100)
x
hof <- function(f, x) cat(
sprintf("The value of y at x = %s is %s.\n", x, f(x)))
hof(sin, pi/4)
myFunction <- function(x) 100 * X
hof(myFunction, -5)
myFunction <- function(x) 100 * x
hof(myFunction, -5)
hof(function(x) 2 * x, 10)
nTimes <- function(n) function(x) n * x
threeTimes = nTimes(3) # threeTimes is now a function of x that returns 3 * x
fourTimes = nTimes(4)  # fourTimes returns 4 * x
fiveTimes = nTimes(5)
threeTimes(5) # 3 is n -- 3*x, x=5
nTimes(10)(5)
Dog <- function(name = "Fido", barkType = "Woof!") {
# Let's set up a "property" that contains a random number of
# times the dog will bark when asked to...
noOfBarks <- numeric(1)
updateBarkNumber <- function() noOfBarks <<- sample(1:10, 1)
updateBarkNumber()
# Let's create a "method" that may change the property noOfBarks...
f <- function() {
cat(c("YIP!\n", "Grr!\n", "YELP!\n", "Ouch!")[sample(1:4, 1)])
updateBarkNumber()
}
# And a "method" to get the dog to bark...
g <- function() for (i in 1:noOfBarks) cat(sprintf("%s ", barkType))
# The "properties" and "methods" that we'd like to be "public"
# are simply elements of a list that the function Dog returns; let's
# create the list and give the elements appropriate names...
list(name = name, swatWithNewspaper = f, bark = g)
}
fido <- Dog()
snookums <- Dog(name = "Snookums", barkType = "Yap!")
fido$name
fido$bark
fido$bark()
makeVector
x
y
z
lm(x)
vec <- makeVector(c(1,2,3,4))
vec
vec$get
vec
vec$setmean
setmean(vec)
a <- makeVector
a
class(a)
class(a$set)
a$get()
a$set(c(1,2,3,4))
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function()x
setinverse <- function(solve) m <<- inverse
getinverse <- function() m
list(set = set,
get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## The cacheSolve function computes the inverse of the special "matrix"
## returned by makeCacheMatrix above. If the inverse has already been calculated
## (and the matrix has not changed), then the cachesolve should retrieve the
## inverse from the cache.
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
## function is solve(x)
m <- x$getinverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix
amatrix$get()
cacheSolve(amatrix)
amatrix$getinverse()
cacheSolve(amatrix)
amatrix
amatrix$get
amatrix$get()
cacheSolve(amatrix)
amatrix$getinverse
amatrix$getinverse()
amatrix$setinverse()
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function()x # Returns original matrix above
setinverse <- function(solve) m <- inverse
getinverse <- function()m
list(set = set,
get = get,
setinverse = setinverse,
getinverse = getinverse)
}
amatrix$setinverse()
amatrix
amatrix$setinverse
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function()x # Returns original matrix above
setinverse <- function(solve) m <<- inverse
getinverse <- function()m
list(set = set,
get = get,
setinverse = setinverse,
getinverse = getinverse)
}
amatrix$get()
amatrix$setinverse()
setwd("/Users/jamesfisher/Documents/Blog/US World Cup Roster")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("RColorBrewer", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
usa <- read.xlsx("US World Cup Roster.xlsx",sheetIndex=1,header=TRUE)
### Graphs:
##      1) Age
##      2) Club Country
##      3) Caps
##      ** Histograms
Year <- usa$Year
Birth <- usa$Birth.Year
Age <- usa$Age
Caps <- usa$Caps
Country <- usa$ClubCountry
df <- data.frame(Year, Birth, Age, Caps, Country)
ifelse(df$Country == "USA","True","False")
ifelse(df$Country == "USA",True,False)
Club <- ifelse(df$Country == "USA", yes = "USA", no = "Foreign")
head(Club)
tail(Club)
merge(df, Club)
head(df)
merge(df, Club, by=Country)
merge(df, Club, by=df$Country)
merge(df, Club)
head(merge(df, Club))
nrow=(merge(df, Club))
rm(nrow)
nrow(merge(df, Club))
?melt
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
class(Club)
Club <- as.data.frame(Club)
class(Club)
head(cbind(df,Club))
tail(cbind(df,Club))
dfclub <- cbind(df,Club)
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar()
col <- c("dodgerblue2","#E31A1C") # USA is last
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_fill_manual(values=col)
col <- c("green","#E31A1C") # USA is last
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_fill_manual(values=col)
col <- c("darkgreen","#E31A1C") # USA is last
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_fill_manual(values=col)
nrow(df$Year["1930"])
df$Year["1930"]
df$Year["1930",]
dim(df$Year)
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_fill_manual(values=col) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=0.5, size=12),
axis.text.y = element_text(size=12),
panel.grid.minor=element_blank(), # hides minor gridliness
panel.grid.major.x=element_blank(), # hides vertical major grid lines
plot.title = element_text(face="bold")) +
guides(fill=FALSE) +
labs(x="Year", y= "Number of Players",
title = "US World Cup Rosters: Domestic and Foreign Clubs")
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_fill_manual(values=col) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=0.5, size=12),
axis.text.y = element_text(size=12),
panel.grid.minor=element_blank(), # hides minor gridliness
panel.grid.major.x=element_blank(), # hides vertical major grid lines
plot.title = element_text(face="bold")) +
labs(x="Year", y= "Number of Players",
title = "US World Cup Rosters: Domestic and Foreign Clubs")
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_fill_manual(values=c("#56B4E9","#D55E00")) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=0.5, size=12),
axis.text.y = element_text(size=12),
panel.grid.minor=element_blank(), # hides minor gridliness
panel.grid.major.x=element_blank(), # hides vertical major grid lines
plot.title = element_text(face="bold")) +
labs(x="Year", y= "Number of Players",
title = "US World Cup Rosters: Domestic and Foreign Clubs")
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_y_continuous(limits=c(0,22),breaks=c(0, 5, 10, 15,20,22)) +
scale_fill_manual(values=c("#56B4E9","#D55E00")) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=0.5, size=12),
axis.text.y = element_text(size=12),
panel.grid.minor=element_blank(), # hides minor gridliness
panel.grid.major.x=element_blank(), # hides vertical major grid lines
plot.title = element_text(face="bold")) +
labs(x="Year", y= "Number of Players",
title = "US World Cup Rosters: Domestic and Foreign Clubs")
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_y_continuous(breaks=c(0, 5, 10, 15,20,22)) +
scale_fill_manual(values=c("#56B4E9","#D55E00")) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=0.5, size=12),
axis.text.y = element_text(size=12),
panel.grid.minor=element_blank(), # hides minor gridliness
panel.grid.major.x=element_blank(), # hides vertical major grid lines
plot.title = element_text(face="bold")) +
labs(x="Year", y= "Number of Players",
title = "US World Cup Rosters: Domestic and Foreign Clubs")
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_y_continuous(breaks=c(0, 5, 10, 15,20,22,23)) +
scale_fill_manual(values=c("#56B4E9","#D55E00")) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=0.5, size=12),
axis.text.y = element_text(size=12),
panel.grid.minor=element_blank(), # hides minor gridliness
panel.grid.major.x=element_blank(), # hides vertical major grid lines
plot.title = element_text(face="bold")) +
labs(x="Year", y= "Number of Players",
title = "US World Cup Rosters: Domestic and Foreign Clubs")
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_y_continuous(expand = c(0,0),breaks=c(0, 5, 10, 15,20,22,23)) +
scale_fill_manual(values=c("#56B4E9","#D55E00")) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=0.5, size=12),
axis.text.y = element_text(size=12),
panel.grid.minor=element_blank(), # hides minor gridliness
panel.grid.major.x=element_blank(), # hides vertical major grid lines
plot.title = element_text(face="bold")) +
labs(x="Year", y= "Number of Players",
title = "US World Cup Rosters: Domestic and Foreign Clubs")
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_y_continuous(expand = c(0,0),
limits=c(0,25),
breaks=c(0, 5, 10, 15,20,22,23)) +
scale_fill_manual(values=c("#56B4E9","#D55E00")) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=0.5, size=12),
axis.text.y = element_text(size=12),
panel.grid.minor=element_blank(), # hides minor gridliness
panel.grid.major.x=element_blank(), # hides vertical major grid lines
plot.title = element_text(face="bold")) +
labs(x="Year", y= "Number of Players",
title = "US World Cup Rosters: Domestic and Foreign Clubs")
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_y_continuous(expand = c(0,0),
limits=c(0,25),
breaks=c(0, 5, 10, 15,20,22,23)) +
scale_fill_manual(values=c("#56B4E9","#D55E00")) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=0.5, size=12),
axis.text.y = element_text(size=12),
panel.grid.minor=element_blank(), # hides minor gridliness
panel.grid.major.x=element_blank(), # hides vertical major grid lines
plot.title = element_text(face="bold")) +
labs(x="Year", y= "Number of Players",
title = "US World Cup Rosters: Clubs Team Countries")
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_y_continuous(expand = c(0,0),
limits=c(0,25),
breaks=c(0, 5, 10, 15,20,22,23)) +
scale_fill_manual(values=c("#56B4E9","#D55E00")) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=0.5, size=12),
axis.text.y = element_text(size=12),
panel.grid.minor=element_blank(), # hides minor gridliness
panel.grid.major.x=element_blank(), # hides vertical major grid lines
plot.title = element_text(face="bold")) +
labs(x="Year", y= "Number of Players",
title = "US World Cup Rosters:\nClub Team Countries")
df["1994"]
df$Year["1994"]
df$Year[1994]
df
df[77:98]
df[77:98,]
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_y_continuous(expand = c(0,0),
limits=c(0,25),
breaks=c(0, 5, 10, 15,20,22,23)) +
scale_fill_manual(values=c("#56B4E9","red")) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=0.5, size=12),
axis.text.y = element_text(size=12),
panel.grid.minor=element_blank(), # hides minor gridliness
panel.grid.major.x=element_blank(), # hides vertical major grid lines
plot.title = element_text(face="bold")) +
labs(x="Year", y= "Number of Players",
title = "US World Cup Rosters:\nClub Team Countries")
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_y_continuous(expand = c(0,0),
limits=c(0,25),
breaks=c(0, 5, 10, 15,20,22,23)) +
scale_fill_manual(values=c("#56B4E9","red2")) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=0.5, size=12),
axis.text.y = element_text(size=12),
panel.grid.minor=element_blank(), # hides minor gridliness
panel.grid.major.x=element_blank(), # hides vertical major grid lines
plot.title = element_text(face="bold")) +
labs(x="Year", y= "Number of Players",
title = "US World Cup Rosters:\nClub Team Countries")
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_y_continuous(expand = c(0,0),
limits=c(0,25),
breaks=c(0, 5, 10, 15,20,22,23)) +
scale_fill_manual(values=c("#56B4E9","red4")) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=0.5, size=12),
axis.text.y = element_text(size=12),
panel.grid.minor=element_blank(), # hides minor gridliness
panel.grid.major.x=element_blank(), # hides vertical major grid lines
plot.title = element_text(face="bold")) +
labs(x="Year", y= "Number of Players",
title = "US World Cup Rosters:\nClub Team Countries")
ggplot(dfclub, aes(x=factor(Year), fill=Club)) +
geom_bar() +
scale_y_continuous(expand = c(0,0),
limits=c(0,25),
breaks=c(0, 5, 10, 15,20,22,23)) +
scale_fill_manual(values=c("#56B4E9","red3")) +
theme_bw() +
theme(axis.text.x = element_text(angle=90, vjust=0.5, size=12),
axis.text.y = element_text(size=12),
panel.grid.minor=element_blank(), # hides minor gridliness
panel.grid.major.x=element_blank(), # hides vertical major grid lines
plot.title = element_text(face="bold")) +
labs(x="Year", y= "Number of Players",
title = "US World Cup Rosters:\nClub Team Countries")
